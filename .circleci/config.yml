version: 2.1

executors:
  java-executor:
    docker:
      - image: openjdk:21-jdk-slim
    working_directory: ~/repo

jobs:
  build:
    executor: java-executor
    steps:
      - checkout
      - run:
          name: Install Maven
          command: |
            apt-get update
            apt-get install -y maven tar
      - restore_cache:
          keys:
            - maven-{{ checksum "pom.xml" }}
            - maven-
      - run:
          name: Prepare Maven Dependencies
          command: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: maven-{{ checksum "pom.xml" }}
      - run:
          name: Build, Test, and Generate Coverage
          command: mvn clean verify jacoco:report
      - persist_to_workspace:
          root: ~/repo
          paths:
            - target
            - target/site/jacoco

  docker-build:
    docker:
      - image: debian:bullseye-slim  # Added Debian image for installation of apt utilities
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install tar and Azure CLI dependencies
          command: |
            apt-get update
            apt-get install -y tar curl lsb-release apt-transport-https
            curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null
            AZ_REPO=$(lsb_release -cs)
            echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | tee /etc/apt/sources.list.d/azure-cli.list
            apt-get update
            apt-get install -y azure-cli
      - setup_remote_docker
      - attach_workspace:
          at: ~/repo
      - run:
          name: Log in to Azure Container Registry
          command: |
            az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
            az acr login --name $ACR_NAME
      - run:
          name: Build Docker Image
          command: |
            docker build -t $ACR_NAME.azurecr.io/your-docker-image-name:latest .
        #      - run:
        #          name: Test Docker Image
        #          command: |
        #            docker run --rm -d -p 8080:8080 your-docker-image-name
        #            sleep 10
        #            curl -f http://localhost:8080/actuator/health || exit 1
      - run:
          name: Push Docker Image to ACR
          command: |
            docker push $ACR_NAME.azurecr.io/your-docker-image-name:latest


  coverage:
    executor: java-executor
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Publish Code Coverage Report
          command: |
            echo "JaCoCo Coverage Report generated:"
            ls -l target/site/jacoco/
      - store_artifacts:
          path: target/site/jacoco
          destination: coverage-reports

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - docker-build:
          requires:
            - build
      - coverage:
          requires:
            - build
